flex容器不是块容器，因此有些设计用来控制块布局的属性在flexbox中不适用。如父元素设为Flex布局以后，子元素的float、clear和vertical-align属性将失效。

容器设为flex后表现出行内块样式。

flex容器属性：
display (line-flex?)

flex-direction: row | column

flex-wrap: nowrap | wrap | wrap-reverse

flex-flow
这是flex-direction和flex-wrap两个属性的缩写。

justify-content: flex-start | flex-end | center | space-between | space-around

align-items: flex-start | flex-end | center | baseline | stretch

align-content: flex-start | flex-end | center | space-between | space-around | stretch
本属性在只有一行的伸缩容器上没有效果。(要配合flex-direction: column设置)。

align-items和align-content区别，前者针对容器内单个子元素，后者是对每一行作用。

Flex项目属性：
order

flex-grow

flex-shrink

flex-basis

flex
flex是flex-grow，flex-shrink和flex-basis三个属性的缩写。第二个和第三个参数(flex-shrink和flex-basis)是可选值。其默认值是0 1 auto。
//移动端flex布局
//flex：定义布局为盒模型
.flex{
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
}
//flex-v：盒模型垂直布局
.flex-v{
    -webkit-box-orient: vertical;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
}
//flex-1：子元素占据剩余的空间
.flex-1{
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    -ms-flex:1;flex: 1;
}
//flex-align-center：子元素垂直居中
.flex-align-center{
    -webkit-box-align: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center;
}
//flex-pack-center：子元素水平居中
.flex-pack-center{
    -webkit-box-pack: center;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center;
}
//flex-pack-justify：子元素两端对齐
.flex-pack-justify{
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
}
兼容性：ios 4+、android 2.3+、winphone8+。
使用注意：
部分国产浏览器flex item需要display: block。
flex下的子元素必须为块级元素，非块级元素在android2.3机器下flex失效。
flex下的子元素宽度和高度不能超过父元素，否则会导致子元素定位错误，例如水平垂直居中。

