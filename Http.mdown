

# 1.《http权威指南》
## HTTP: 超文本传输协议
> Http是一个基于请求（request）/响应 （response）模式的、无状态的协议

http://  www  .  baidu.com  :  80  /  news.html  
协议  子域名  主域名  端口号  请求资源地址



Web 服务器会为所有 HTTP 对象数据附加一个 MIME 类型

> MIME类型是一种文本标记，表示一种主要的对象类型和一个特定的子类型，如text／html。


### URL：统一资源定位符
> URL是URI（统一资源标识符）的一个子集，URL描述了一台特定服务器上某资源的特定位置，是uri最常见的形式。

* URL组件：方案（协议）＋ 用户名 ＋ 密码（一般用作ftp）＋ 主机 ＋端口（默认80）＋ 路径 ＋ 参数（;分隔）＋ 查询（?分隔，名值对用&分隔）＋ 片段（#分隔）

### HTTP报文


### 事务：
一个http事务由一条请求命令和一个响应结果组成，通过http报文（HTTP message）的格式化数据进行。  
* [一个完成的http事务过程：](http://caibaojian.com/toutiao/5755)

应用程序完成一项任务时通常会发布多个 HTTP 事务。

### 方法：
http的请求命令被称为 HTTP 方法（HTTP method）。

### 状态码：
每条 HTTP 响应报文返回时都会携带一个状态码


## 连接
### TCP/IP：


## Web的结构组件
### 代理：位于客户端和服务器之前的http中间实体

### 缓存（cache）：HTTP 的仓库，使常用页面的副本可以保存在离客户端更近的地方

### 网关：连接其他应用程序的特殊 Web 服务器
* 通常用于将 HTTP 流量转换成其他的协议。

### 隧道：对 HTTP 通信报文进行盲转发的特殊代理
* HTTP 隧道的一种常见用途是通过 HTTP 连接承载加密的安全套接字层（SSL，
Secure Sockets Layer）流量

### Agent 代理：发起自动 HTTP 请求的半智能 Web 客户端




# 2.《图解http》
## TCP/IP
> TCP/IP是在IP协议的通信过程中，使用到的协议族的统称。http是该协议族的一个子集。

### TCP/IP分层管理
* 应用层（http、ftp、dns）
* 传输层（tcp、udp）
* 网络层（ip）
* 链路层（网络接口层，即硬件层）

### TCP协议

### IP协议

### http报文

### http状态码
* 1xx（接收的请求正在处理）
* 2xx（请求正常处理完毕）
* 3xx（重定向）
* 4xx（客户端错误）
* 5xx（服务端错误）

### 通信数据转发程序：代理、网关、隧道
* 代理：转发客服端的请求和服务器的响应

1.缓存代理：减少网络带宽的流量
2.透明代理

* 网关：盲转发其他通信服务器数据的服务器

> 网关能使通信线路上的服务器提供非http协议服务

* 隧道：中转并保持双方通信连接的应用程序

### http报文首部
#### 请求报文：方法、URI、http版本、http首部字段

#### 响应报文：http版本、状态码（数字和原因短语）、http首部字段

#### 通用首部字段
1. Cache-Control

2. Connection
* 控制不再转发给代理的首部字段
* 管理持久连接（默认Kepp-Alive，关闭则Close）

#### 请求首部字段
1. Accept （能够处理的媒体类型）
2. Hosts
3. Referer（提供了Request的上下文信息的服务器，告诉服务器我是从哪个链接过来的，比如从我主页上链接到一个朋友那里，他的服务器就能够从HTTP Referer中统计出每天有多少用户点击我主页上的链接访问他的网站。）

#### 响应首部字段
1. Server 

#### 实体首部字段
1. Allow (支持的http方法)

#### Cookie首部字段
1. Set-Cookie
2. Cookie

## HTTPS （HTTP + SSL）
### http缺点
* 明文通信不加密
* 不验证通信方身份
* 无法证明报文的完整性

## Websocket


## Note
### socket
* socket只是一种连接模式

> http就是基于tcp的，.用socket可以创建tcp连接，也可以创建udp连接，这意味着，用socket可以创建任何协议的连接，因为其它协议都是基于此的。

### POST和GET方法的区别
1. GET提交的数据会放在URL之后，以?分割URL和传输数据，参数之间以&相连，如EditPosts.aspx?name=test1&id=123456. POST方法是把提交的数据放在HTTP包的Body中.
2. GET提交的数据大小有限制（因为浏览器对URL的长度有限制），而POST方法提交的数据没有限制.
GET方式需要使用Request.QueryString来取得变量的值，而POST方式通过Request.Form来获取变量的值，也就是说Get是通过地址栏来传值，而Post是通过提交表单来传值。
3. GET方式提交数据，会带来安全问题，比如一个登录页面，通过GET方式提交数据时，用户名和密码将出现在URL上，如果页面可以被缓存或者其他人可以访问这台机器，就可以从历史记录获得该用户的账号和密码






