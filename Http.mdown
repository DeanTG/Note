

# 1.《http权威指南》HTTP :超文本传输协议
http://  www  .  baidu.com  :  80  /  news.html  
协议  子域名  主域名  端口号  请求资源地址


## web客户端和服务器
### 资源：
web服务器是web服务器资源的宿主。

### 媒体类型：
 
http给通过web传输的对象打上MIME类型的数据格式标签用来描述并标记多媒体内容。
  
* MIME类型是一种文本标记，表示一种主要的对象类型和一个特定的子类型，如text／html。
* web服务器为所有http对象数据附加一个MIME类型。

### URI：统一资源标识符

* URL：统一资源定位符。  
	* URL 描述了一台特定服务器上某资源的特定位置，是uri最常见的形式。
* URN：是统一资源名。

### 事务：
一个http事务由一条请求命令和一个响应结果组成，通过http报文（HTTP message）的格式化数据进行。  

应用程序完成一项任务时通常会发布多个 HTTP 事务。

### 方法：
http的请求命令被称为 HTTP 方法（HTTP method）。

### 状态码：
每条 HTTP 响应报文返回时都会携带一个状态码


## 连接
### TCP/IP：
* HTTP 是个应用层协议。
* TCP( 传输控制协议 Transmission Control Protocol ) 提供了无差错的数据传输；按序传输（数据总是会按照发送的顺序到达）；未分段的数据流（可以在任意时刻以任意尺寸将数据发送出去）。
* HTTP：应用层 －> [ TSL or SSL:安全层 ] －> TCP：传输层 －> IP：网络层 －> 网络特有的链路接口：数据链路层 －>  物理网络硬件：物理层

### 连接、IP地址及端口号：
* 在 HTTP 客户端向服务器发送报文之前，需要用网际协议（Internet Protocol，IP）
地址和端口号在客户端和服务器之间建立一条 TCP/IP 连接。   
* 客户端根据 URL 判定出 IP 地址和端口号，并建立一条到服务器的 TCP 连接,建立连接可能要花费一些时间，时间长短取决于服务器距离的远近、服务器的负载情况，以及因特网的拥挤程度。一旦建立了连接，客户端就会发送 HTTP 请求，服务器则会读取请求。一旦服务器获取了整条请求报文，就会对请求进行处理，执行所请求的动作，并将数据写回客户端。客户端读取数据，并对响应数据进行处理。

连接过程：  

1. 浏览器从 URL 中解析出服务器的主机名；
2. 浏览器将服务器的主机名转换成服务器的 IP 地址；
3. 浏览器将端口号（如果有的话）从 URL 中解析出来；
4. 浏览器建立一条与 Web 服务器的 TCP 连接；
5. 浏览器向服务器发送一条 HTTP 请求报文；
6. 服务器向浏览器回送一条 HTTP 响应报文；
7. 关闭连接，浏览器显示文档。



## Web的结构组件
### 代理：位于客户端和服务器之前的http中间实体

### 缓存（cache）：HTTP 的仓库，使常用页面的副本可以保存在离客户端更近的地方

### 网关：连接其他应用程序的特殊 Web 服务器
* 通常用于将 HTTP 流量转换成其他的协议。

### 隧道：对 HTTP 通信报文进行盲转发的特殊代理
* HTTP 隧道的一种常见用途是通过 HTTP 连接承载加密的安全套接字层（SSL，
Secure Sockets Layer）流量

### Agent 代理：发起自动 HTTP 请求的半智能 Web 客户端

# 2.《图解http》
## TCP/IP
> TCP/IP是在IP协议的通信过程中，使用到的协议族的统称。http是该协议族的一个子集。

### TCP/IP分层管理
* 应用层（http、ftp、dns）
* 传输层（tcp、udp）
* 网络层（ip）
* 链路层（网络接口层，即硬件层）

### TCP协议

### IP协议

### http报文

### http状态码
* 1xx（接收的请求正在处理）
* 2xx（请求正常处理完毕）
* 3xx（重定向）
* 4xx（客户端错误）
* 5xx（服务端错误）

### 通信数据转发程序：代理、网关、隧道
* 代理：转发客服端的请求和服务器的响应

1.缓存代理：减少网络带宽的流量
2.透明代理

* 网关：转发其他通信服务器数据的服务器

> 网关能使通信线路上的服务器提供非http协议服务

* 隧道：中转并保持双方通信连接的应用程序

### http报文首部
#### 请求报文：方法、URI、http版本、http首部字段

#### 响应报文：http版本、状态码（数字和原因短语）、http首部字段

#### 通用首部字段
1. Cache-Control

2. Connection
* 控制不再转发给代理的首部字段
* 管理持久连接（默认Kepp-Alive，关闭则Close）

#### 请求首部字段
1. Accept （能够处理的媒体类型）
2. Hosts

#### 响应首部字段
1. Server 

#### 实体首部字段
1. Allow (支持的http方法)

#### Cookie首部字段
1. Set-Cookie
2. Cookie

## HTTPS （HTTP + SSL）
### http缺点
* 明文通信不加密
* 不验证通信方身份
* 无法证明报文的完整性

## Websocket










